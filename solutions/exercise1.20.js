function gcd(a, b) {
  return b === 0 ? a : gcd(b, a % b);
}

// gcd(206, 40)
// == gcd(40, 206 % 40)
// == 206 % 40 === 0                                             ...(1)
//    ? 40
//    : gcd(206 % 40, 40 % (206 % 40))
// == 40 % (206 % 40) === 0                                      ...(3)
//    ? 206 % 40
//    : gcd(40 % (206 % 40), (206 % 40) % (40 % (206 % 40)))
// == (206 % 40) % (40 % (206 % 40)) === 0                       ...(7)
//    ? 40 % (206 % 40)
//    : gcd(
//     (206 % 40) % (40 % (206 % 40)),
//     (40 % (206 % 40)) % ((206 % 40) % (40 % (206 % 40)))
//    )
// == (40 % (206 % 40)) % ((206 % 40) % (40 % (206 % 40))) === 0 ...(14)
//    ? (206 % 40) % (40 % (206 % 40))
//    : gcd(
//     (40 % (206 % 40)) % ((206 % 40) % (40 % (206 % 40))),
//     (206 % 40) % (40 % (206 % 40))
//     % (40 % (206 % 40)) % ((206 % 40) % (40 % (206 % 40)))
//    )
// == (206 % 40) % (40 % (206 % 40))                             ...(18)
// == 2
// 18 remainder operations are performed
// in the normal-order evaluation.

// gcd(206, 40)
// == gcd(40, 206 % 40) ...(1)
// == gcd(6, 40 % 6)    ...(2)
// == gcd(4, 6 % 4)     ...(3)
// == gcd(2, 4 % 2)     ...(4)
// == 2
// 4 remainder operations are performed
// in the applicative-order evaluation.
